version: '3.7'

volumes:
  api-service-upload-volume:
    driver: local
    name: ${API_SERVICE_UPLOAD_VOLUME_NAME}
  db-service-volume:
    driver: local
    name: ${DB_SERVICE_VOLUME_NAME}

networks:
  infra-network:
    driver: bridge
    name: ${INFRA_NETWORK_NAME}

services:
  api-service:
    image: ${API_SERVICE_IMAGE}
    container_name: ${API_SERVICE_CONTAINER_NAME}
    profiles: ["prod"]
    build: 
      context: ../app
      dockerfile: Dockerfile
    ports:
      - "${API_SERVICE_PORT}:${API_SERVICE_PORT}"
    restart: unless-stopped
    depends_on:
      - db-service
    environment:
      PORT: ${API_SERVICE_PORT}
      JWT_ACCESS_SECRET_KEY: ${API_SERVICE_ACCESS_SECRET_KEY}
      JWT_REFRESH_SECRET_KEY: ${API_SERVICE_REFRESH_SECRET_KEY}
      JWT_ACCESS_EXPIRATION: ${API_SERVICE_JWT_ACCESS_EXPIRATION}
      JWT_REFRESH_EXPIRATION: ${API_SERVICE_JWT_REFRESH_EXPIRATION}
      MY_SQL_HOST: ${DB_SERVICE_HOSTNAME}
      MY_SQL_PORT: ${DB_SERVICE_PORT}
      MYSQL_DATABASE: ${DB_SERVICE_DATABASE_NAME}
      MYSQL_USER: ${DB_SERVICE_DATABASE_USER}
      MYSQL_PASSWORD: ${DB_SERVICE_DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_SERVICE_ROOT_PASSWORD}
    volumes:
      - api-service-upload-volume:/usr/src/app/upload


  db-service:
    profiles: ["prod","dev"]
    image: ${DB_SERVICE_IMAGE}
    hostname: ${DB_SERVICE_HOSTNAME}
    container_name: ${DB_SERVICE_CONTAINER_NAME}
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_SERVICE_DATABASE_NAME}
      MYSQL_USER: ${DB_SERVICE_DATABASE_USER}
      MYSQL_PASSWORD: ${DB_SERVICE_DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_SERVICE_ROOT_PASSWORD}
    ports:
      - "${DB_SERVICE_PORT}:${DB_SERVICE_PORT}"
    volumes:
      - db-service-volume:/var/lib/mysql
